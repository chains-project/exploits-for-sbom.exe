package org.example;

import com.turn.ttorrent.client.Client;
import com.turn.ttorrent.client.SharedTorrent;
import org.openjdk.jmh.annotations.Benchmark;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.annotations.Mode;


import java.io.File;
import java.io.IOException;
import java.net.InetAddress;
import java.nio.file.Files;

public class Main {

    public static void main(String[] args) throws IOException {
        org.openjdk.jmh.Main.main(args);
    }

    @Benchmark
    @BenchmarkMode(Mode.All)
    public void ttorrent() throws Exception {
        File tempDownloadDir = Files.createTempDirectory("test_folder").toFile();
        tempDownloadDir.deleteOnExit();
        Client client = new Client(
                // This is the interface the client will listen on (you might need something
                // else than localhost here).
                InetAddress.getLocalHost(),

                // Load the torrent from the torrent file and use the given
                // output directory. Partials downloads are automatically recovered.
                SharedTorrent.fromFile(
                        new File("src/main/resources/sample.torrent"),
                        tempDownloadDir));

        client.download();
        client.waitForCompletion();
    }
}